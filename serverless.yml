service: template # NOTE: update this with your service name

custom: 
  PATH: ./config.json
  PROJECT: ${file(${self:custom.PATH}):project}

provider:
  name: aws
  runtime: nodejs8.10

  stage: ${opt:stage, 'dev'}
  region: ${file(${self:custom.PATH}):region, 'ap-southeast-1'}
  profile: ${file(${self:custom.PATH}):profile, 'default'}

  logRetentionInDays: ${file(${self:custom.PATH}):logRetentionInDays , 90}
  memorySize: ${file(${self:custom.PATH}):memorySize, 128}
  timeout: ${file(${self:custom.PATH}):timeout}
  
  stackName: ${self:custom.PROJECT}-stack-${self:provider.stage}
  apiName: ${self:custom.PROJECT}-api-${self:provider.stage}

  deploymentBucket:
    name: ${self:custom.PROJECT}-deployment-bucket

  # iamRoleStatements:
  #   - Effect: "Allow"
  #     Action:
  #       - s3:*
  #     Resource: 
  #       - "arn:aws:s3:::[BUCKET NAME]/*"

  # vpc:
  #   securityGroupIds:
  #     - 
  #   subnetIds:
  #     - 

functions:
  hello:
    handler: handler.hello
    events:
      # Please remove this
      - http:
          path: ${self:service}/hello
          method: get
          integration: lambda
          # cors:
          #   origin: '*' # <-- Specify allowed origin
          #   headers: # <-- Specify allowed headers
          #     - Access-Control-Allow-Credentials
          #     - X-Amz-Date
          #     - Authorization
          #     - X-Api-Key
          #     - X-Amz-Security-Token
          #     - X-Amz-User-Agent
          #     - idToken
          #   allowCredentials: false

          # authorizer:
          #   type: COGNITO_USER_POOLS # TOKEN or COGNITO_USER_POOLS, same as AWS Cloudformation documentation
          #   authorizerId: r5j1jv


          